<?php

	/**
	* 
	*/
	class JammuI
	{

		function __construct()
		{
			# code...
		}

		/**
		*	sendMessage
		*	@param Std::class object {address, body}
		*/
		static function sendMessage($message)
		{
			// getting pending message
			$js = json_decode(file_get_contents('tosend.json'), true);
			// adding new coming
			$js[] = ["address" => $message->address, "body" => $message->body];
			// save
			if (!file_put_contents('tosend.json', json_encode($js))) {
				throw new Exception("Erreur JAMMU 101", 1);
			}
		}

		/**
		*	say
		*	@param String text
		*/
		static function say($text, $brk=true)
		{
			echo $text.($brk ? "\n" : '');
		}

		static function save($message)
		{
			try{
				$bd = self::getDbInstance();

				$q = $bd->prepare("INSERT INTO messages(address, body, send_date) VALUES(:address, :body, :send_date)");
				$q->execute([
					"address" => $message->address,
					"body" => $message->body,
					"send_date" => date("d/m/Y H:i")
				]);

				$q->closeCursor();
			} 
			catch(Exception $e){
				die('Erreur : '.$e->getMessage()) ;
			}
		}

		static function getDbInstance()
		{
			try {
				$configs = self::loadConfigs();
				$pdo_options[PDO::ATTR_ERRMODE] = PDO::ERRMODE_EXCEPTION ;
				$db = new PDO('mysql:dbname='.$configs->database.'; host='.$configs->hostname, $configs->username, $configs->password, $pdo_options) ;
				$db->exec("set names ".$configs->dbcharset);

				return $db;
			} catch (Exception $e) {
				return false;
			}
		}

		static function loadConfigs()
		{
			return (object) json_decode(file_get_contents('config.json'), true);
		}
	}